name: Deploy .NET API to Azure Container Apps

on:
  push:
    branches: [ master ]
    paths: [ 'HackerNewsApi/**' ]
  workflow_dispatch:

env:
  AZURE_CONTAINER_APP_NAME: api-hackernews-demo
  AZURE_RESOURCE_GROUP: DefaultResourceGroup-WUS2
  AZURE_CONTAINER_REGISTRY: ca9b510639d1acr
  IMAGE_NAME: hackernews-api
  DOTNET_VERSION: '9.0'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: üõí Checkout code
      uses: actions/checkout@v4

    - name: ‚öôÔ∏è Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: üîß Restore dependencies
      run: dotnet restore
      working-directory: ./HackerNewsApi

    - name: üèóÔ∏è Build application
      run: dotnet build --no-restore --configuration Release
      working-directory: ./HackerNewsApi

    - name: üß™ Run tests
      run: dotnet test --no-build --configuration Release --verbosity normal
      working-directory: ./HackerNewsApi

    - name: üîê Log in to Azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: üê≥ Log in to Azure Container Registry
      run: |
        az acr login --name ${{ env.AZURE_CONTAINER_REGISTRY }}

    - name: üì¶ Build and push Docker image
      run: |
        docker build -t ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }} -t ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.IMAGE_NAME }}:latest ./HackerNewsApi
        docker push ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
        docker push ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.IMAGE_NAME }}:latest

    - name: üöÄ Deploy to Azure Container Apps
      run: |
        az containerapp update \
          --name ${{ env.AZURE_CONTAINER_APP_NAME }} \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --image ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}

    - name: ‚úÖ Deployment Summary
      run: |
        echo "üéâ Deployment completed successfully!"
        APP_URL=$(az containerapp show --name ${{ env.AZURE_CONTAINER_APP_NAME }} --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --query properties.configuration.ingress.fqdn -o tsv)
        echo "üîó Container App URL: https://$APP_URL"